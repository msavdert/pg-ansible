---
# Main PostgreSQL role tasks

- name: Check if PostgreSQL is already installed
  package_facts:
    manager: "auto"
  when: postgresql_skip_if_installed | default(true)

- name: Skip installation if PostgreSQL is already installed
  meta: end_host
  when: 
    - postgresql_skip_if_installed | default(true)
    - ansible_facts.packages is defined
    - ansible_facts.packages.keys() | select('match', '^postgresql') | list | length > 0

- name: System information
  ansible.builtin.debug:
    var: system_info
  vars:
    system_info:
      OS: "{{ ansible_distribution | default('N/A') }} {{ ansible_distribution_version | default('N/A') }}"
      Kernel: "{{ ansible_kernel | default('N/A') }}"
      CPU model: >-
        {{ ansible_processor[2] | default('N/A') }},
        count: {{ ansible_processor_count | default('N/A') }},
        cores: {{ ansible_processor_cores | default('N/A') }}
      Memory: "{{ (ansible_memtotal_mb / 1024) | round(2) if ansible_memtotal_mb is defined else 'N/A' }} GB"
      Disk space total: >-
        {{
          (ansible_mounts
            | map(attribute='size_total')
            | map('int')
            | sum / 1024 / 1024 / 1024
          )
          | round(2) if ansible_mounts is defined else 'N/A'
        }} GB
      Architecture: "{{ ansible_architecture | default('N/A') }}"
      Virtualization type: "{{ ansible_virtualization_type | default('N/A') }}"
      Product name: "{{ ansible_product_name | default('N/A') }}"
  tags: always

- name: Configure Node
  include_tasks: node.yml

- name: Initialize PostgreSQL
  include_tasks: initialize.yml
